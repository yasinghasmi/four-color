name: main - production synchronization

permissions:
  contents: write
  pull-requests: write

on:
  push:
    branches:
      - main
      - production

jobs:
  # ——————————————————————————————————————————————————————————————————————
  # Job A: whenever main gets a new push (merge or commit),
  # cherry-pick that commit onto production and open a PR there.
  # ——————————————————————————————————————————————————————————————————————
  create-production-pr:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Check out main (full history)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Capture the new commit SHA
        run: echo "COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Find merged PR metadata
        id: find_pr
        uses: sparticuz/find-merged-pull-request@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          commit_sha: ${{ env.COMMIT_SHA }}

      - name: Extract PR number & title
        run: |
          echo "PR_NUM=$(jq -r .number <<< '${{ steps.find_pr.outputs.pr }}')"  >> $GITHUB_ENV
          echo "PR_TITLE=$(jq -r .title  <<< '${{ steps.find_pr.outputs.pr }}')"  >> $GITHUB_ENV

      - name: Check out production
        uses: actions/checkout@v3
        with:
          ref: production
          fetch-depth: 0
          path: production

      - name: Create & switch to cherry-pick branch
        run: |
          cd production
          git checkout -b prod/cherry-pick-${{ env.COMMIT_SHA }}

      - name: Cherry-pick main commit
        run: |
          cd production
          git remote add main_repo "${{ github.server_url }}/${{ github.repository }}.git"
          git fetch main_repo main
          git cherry-pick ${{ env.COMMIT_SHA }} --allow-empty

      - name: Push branch & open PR to production
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: '[prod] Cherry-pick of main PR #${{ env.PR_NUM }}'
          title: '[prod] Cherry-pick of main PR #${{ env.PR_NUM }} – ${{ env.PR_TITLE }}'
          body: |
            Cherry-pick of main commit `${{ env.COMMIT_SHA }}` (PR #${{ env.PR_NUM }}) into production.
          base: production
          head: production/prod/cherry-pick-${{ env.COMMIT_SHA }}

  # ——————————————————————————————————————————————————————————————————————
  # Job B: whenever production sees a revert commit,
  # reproduce that revert on main.
  # ——————————————————————————————————————————————————————————————————————
  revert-on-main:
    if: >
      github.ref == 'refs/heads/production' &&
      startsWith(github.event.head_commit.message, 'Revert')
    runs-on: ubuntu-latest
    steps:
      - name: Extract SHA being reverted
        run: |
          SHA=$(echo "${{ github.event.head_commit.message }}" | grep -oE '[0-9a-f]{7,40}' | head -1)
          echo "REVERTED_SHA=$SHA" >> $GITHUB_ENV

      - name: Check out main
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0

      - name: Revert that SHA on main
        run: |
          cd .
          git checkout -b revert-prod-${{ env.REVERTED_SHA }}
          git revert ${{ env.REVERTED_SHA }} --no-edit

      - name: Push & open revert PR on main
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: 'Revert production revert of ${{ env.REVERTED_SHA }}'
          body: |
            This PR reverts the production revert of commit `${{ env.REVERTED_SHA }}` to keep main in sync.
          base: main
          head: main/revert-prod-${{ env.REVERTED_SHA }}

  # ——————————————————————————————————————————————————————————————————————
  # Job C: whenever main sees a revert and there’s an open cherry-pick PR
  # on production, cherry-pick that same revert into that PR branch.
  # ——————————————————————————————————————————————————————————————————————
  propagate-main-revert-to-prod-branch:
    if: >
      github.ref == 'refs/heads/main' &&
      startsWith(github.event.head_commit.message, 'Revert')
    runs-on: ubuntu-latest
    steps:
      - name: Extract main-revert SHA
        run: |
          SHA=$(echo "${{ github.event.head_commit.message }}" | grep -oE '[0-9a-f]{7,40}' | head -1)
          echo "MAIN_REVERTED_SHA=$SHA" >> $GITHUB_ENV

      - name: Find open prod PR via GitHub API
        uses: actions/github-script@v6
        id: find_pr
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const sha = process.env.MAIN_REVERTED_SHA;
            const prs = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              base: 'production'
            });
            const pr = prs.data.find(p => p.head.ref.includes(sha));
            if (!pr) return;
            return { number: pr.number, head: pr.head.ref };

      - name: Skip if no matching prod PR
        if: ${{ !steps.find_pr.outputs.number }}
        run: echo "No open production PR for SHA ${{ env.MAIN_REVERTED_SHA }}, skipping."

      - name: Check out the prod PR branch
        if: ${{ steps.find_pr.outputs.number }}
        uses: actions/checkout@v3
        with:
          ref: production
          fetch-depth: 0
          path: production

      - name: Cherry-pick the main revert into that branch
        if: ${{ steps.find_pr.outputs.number }}
        run: |
          cd production
          git fetch origin pull/${{ steps.find_pr.outputs.number }}/head:tmp-pr
          git checkout tmp-pr
          git cherry-pick ${{ env.MAIN_REVERTED_SHA }} --allow-empty
          git push origin tmp-pr:pr-${{ steps.find_pr.outputs.number }}
